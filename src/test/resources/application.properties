##
## Profiles
##
spring.profiles.active=sqlserver,google,alg2

## OpenAPI
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

## JWT
jwt.private.key=classpath:rsa.private.key
jwt.public.key=classpath:rsa.public.key

## datasource
#spring.datasource.url=jdbc:h2:tcp://localhost/~/psoft-g1
# ^ H2 Console needs to be running, and file needs to be previously created in path ^
#spring.datasource.url=jdbc:h2:~/psoft-g1
# ^ File needs to be previously created in path ^
spring.datasource.url=jdbc:h2:mem:testdb
# ^ No prerequisites ^
spring.datasource.username=mysqluser
spring.datasource.password=mysqlpass
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName=org.h2.Driver

## database schema generation
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=uploads-psoft-g1
#Maximum photo size -> in bytes | by the rules of the forum it's 20KB
file.photo_max_size=20000

## Api Ninjas key
my.ninjas-key=a5nSlaa4JxIubY09H+NYuQ==cY9FegnFmAvYi6fN

## Logging
logging.level.com.example.demo=DEBUG
#logging.level.org.springframework=DEBUG

### google

spring.security.oauth2.client.registration.google.client-id=619816574110-j30v3ta932paac72327i4k529i1psd6p.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

algorithm=AlgorithmHash
numberOfBooks=100
numberOfGenres=100
RecomendationAlgorithm=RecomendationAlgorithm2

minAge=30
maxAge= 40
